// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockManagement.Repositories;

#nullable disable

namespace StockManagement.Migrations
{
    [DbContext(typeof(StockContext))]
    [Migration("20240705230940_seeding data")]
    partial class seedingdata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StockManagement.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Description = "Apple iPhone 13 with 128GB storage",
                            Name = "iPhone 13",
                            Price = 999
                        },
                        new
                        {
                            Id = -2,
                            Description = "Samsung Galaxy S21 with 128GB storage",
                            Name = "Samsung Galaxy S21",
                            Price = 799
                        },
                        new
                        {
                            Id = -3,
                            Description = "Google Pixel 6 with 128GB storage",
                            Name = "Google Pixel 6",
                            Price = 599
                        },
                        new
                        {
                            Id = -4,
                            Description = "OnePlus 9 with 128GB storage",
                            Name = "OnePlus 9",
                            Price = 729
                        },
                        new
                        {
                            Id = -5,
                            Description = "Sony Xperia 5 II with 128GB storage",
                            Name = "Sony Xperia 5 II",
                            Price = 949
                        },
                        new
                        {
                            Id = -6,
                            Description = "Xiaomi Mi 11 with 128GB storage",
                            Name = "Xiaomi Mi 11",
                            Price = 749
                        },
                        new
                        {
                            Id = -7,
                            Description = "Oppo Find X3 Pro with 256GB storage",
                            Name = "Oppo Find X3 Pro",
                            Price = 1149
                        },
                        new
                        {
                            Id = -8,
                            Description = "Nokia 8.3 5G with 128GB storage",
                            Name = "Nokia 8.3 5G",
                            Price = 699
                        },
                        new
                        {
                            Id = -9,
                            Description = "Asus ROG Phone 5 with 256GB storage",
                            Name = "Asus ROG Phone 5",
                            Price = 999
                        },
                        new
                        {
                            Id = -10,
                            Description = "Huawei P40 Pro with 256GB storage",
                            Name = "Huawei P40 Pro",
                            Price = 899
                        });
                });

            modelBuilder.Entity("StockManagement.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Address = "123 Tech Street",
                            Name = "Tech World"
                        },
                        new
                        {
                            Id = -2,
                            Address = "456 Gadget Avenue",
                            Name = "Gadget Hub"
                        },
                        new
                        {
                            Id = -3,
                            Address = "789 Phone Road",
                            Name = "Phone Plaza"
                        },
                        new
                        {
                            Id = -4,
                            Address = "101 Mobile Lane",
                            Name = "Mobile Center"
                        },
                        new
                        {
                            Id = -5,
                            Address = "202 Electro Boulevard",
                            Name = "Electro Store"
                        },
                        new
                        {
                            Id = -6,
                            Address = "303 Device Drive",
                            Name = "Device Depot"
                        },
                        new
                        {
                            Id = -7,
                            Address = "404 Smartphone Way",
                            Name = "Smartphone Shop"
                        },
                        new
                        {
                            Id = -8,
                            Address = "505 Techie Circle",
                            Name = "Techie Corner"
                        },
                        new
                        {
                            Id = -9,
                            Address = "606 Gizmo Place",
                            Name = "Gizmo Place"
                        },
                        new
                        {
                            Id = -10,
                            Address = "707 Digital Street",
                            Name = "Digital Market"
                        });
                });

            modelBuilder.Entity("StockManagement.Models.StoreItem", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ItemId", "StoreId");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreItems");
                });

            modelBuilder.Entity("StockManagement.Models.StoreItem", b =>
                {
                    b.HasOne("StockManagement.Models.Item", "Item")
                        .WithMany("StoreItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockManagement.Models.Store", "Store")
                        .WithMany("StoreItems")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("StockManagement.Models.Item", b =>
                {
                    b.Navigation("StoreItems");
                });

            modelBuilder.Entity("StockManagement.Models.Store", b =>
                {
                    b.Navigation("StoreItems");
                });
#pragma warning restore 612, 618
        }
    }
}
